{"version":3,"file":"preload.bundled.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UCLA;;;;;;;;;;;;ACDA;AACA;;AAEA;AACA;AACA;;;AAGsD;AACtD;AACA;AACA;AACA,qEAA+B;AAC/B;AACA,cAAc,sDAAgB;AAC9B;AACA;AACA;AACA,GAAG;AACH,CAAC,E","sources":["webpack://aap-ka-kaam/external node-commonjs \"electron\"","webpack://aap-ka-kaam/webpack/bootstrap","webpack://aap-ka-kaam/webpack/runtime/compat get default export","webpack://aap-ka-kaam/webpack/runtime/define property getters","webpack://aap-ka-kaam/webpack/runtime/hasOwnProperty shorthand","webpack://aap-ka-kaam/webpack/runtime/make namespace object","webpack://aap-ka-kaam/webpack/runtime/compat","webpack://aap-ka-kaam/./src/preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/native_modules/\";","// See the Electron documentation for details on how to use preload scripts:\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\n\n// import * as prel from \"./preload.ts\";\n// console.log(\"preload.js\");\n// export default prel;\n\n\nimport { contextBridge, ipcRenderer } from \"electron\";\nconsole.log(\"preload.js file loaded\");\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld(\"preLoadedJs\", {\n  system: () => process.getSystemVersion(),\n  ping: () => ipcRenderer.send(\"ping\"),\n  data: {\n    myFlags: [\"a\", \"b\", \"c\"],\n    bootTime: 1234,\n  },\n});"],"names":[],"sourceRoot":""}