// // import Sqlite3 from "better-sqlite3";
// // const db = new Sqlite3("./db.db");

// import { BrowserWindow, ipcMain } from "electron";
// import { getNames } from "../db/sqlite3";
// // const sqlite3 = require("sqlite3").verbose();
// // const db = new sqlite3.Database("../db.db");

// // This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// // plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// // whether you're running in development or production).
// declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
// declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// export default function createWindow(): void {
//   // const query = "select * from TestTable";
//   // const statement = db.prepare(query);
//   // const result = statement.all();
//   // console.log("statement.all()", result);

//   // Create the browser window.
//   const mainWindow = new BrowserWindow({
//     height: 600,
//     width: 1200,
//     webPreferences: {
//       preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
//     },
//   });

//   ipcMain.on("asynchronous-message", (event, arg) => {
//     console.log(arg); // prints "ping async"
//     event.sender.send("asynchronous-reply", "pong async");
//   });

//   ipcMain.on("synchronous-message", (event, arg) => {
//     console.log(arg); // prints "ping sync"
//     event.returnValue = "pong sync";
//   });

//   ipcMain.handle("invoke-handle-message", (event, arg) => {
//     console.log(arg);
//     return "pong";
//   });

//   // ipcMain.handle("getTestTableNamesChannel", async (event, arg) => {
//   //   console.log("getTestTableNamesChannel");
//   //   const result = await getNames();
//   //   console.log("getTestTableNamesChannel result: ", result);
//   //   return result;
//   // });

//   // ipcMain.handle("getTestTableNamesChannel", (event, arg) => {
//   //   console.log("getTestTableNames ipcMain handle called", arg);
//   //   return getNames();
//   // });

//   // and load the index.html of the app.
//   mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

//   mainWindow.webContents.on("did-finish-load", () => {
//     console.log("did-finish-load");
//     mainWindow.webContents.send("getNames", getNames());
//   });

//   console.log(mainWindow.webContents);
//   // Open the DevTools.
//   mainWindow.webContents.openDevTools();
// }
